{"ast":null,"code":"var _jsxFileName = \"/Users/Faith/Downloads/ELeNa/elena-frontend/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from 'react-dom';\nimport { Polyline, Map, TileLayer, FeatureGroup, CircleMarker, Popup } from \"react-leaflet\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport SearchBar from './SearchBar';\nimport 'leaflet/dist/leaflet.css';\n\nclass ElenaMap extends React.Component {\n  constructor() {\n    super();\n\n    this.highlighted_route = route => {\n      const mapElement = this.mapRef.current.leafletElement;\n      const routeElement = this.routeRef.current.leafletElement;\n      this.setState({\n        highlighted_route: [route.shortestpath.values, route.selectedpath.values],\n        elevation: [route.shortestpath.elevation, route.selectedpath.elevation],\n        distance: [route.shortestpath.distance, route.selectedpath.distance],\n        markers: [route.shortestpath.values[0], route.shortestpath.values[route.shortestpath.values.length - 1]]\n      }, () => {\n        mapElement.fitBounds(routeElement.getBounds());\n      });\n    };\n\n    this.state = {\n      center: [37.7267455, -122.443671],\n      zoom: 20,\n      highlighted_route: [[], []],\n      elevation: [[0], [1]],\n      distance: [[0], [1]],\n      markers: [],\n      popups: [\"Origin\", \"Destination\"],\n      marker_color: [\"green\", \"red\"]\n    };\n    this.routeRef = React.createRef();\n    this.mapRef = React.createRef();\n  }\n\n  render() {\n    const position = [this.state.center[0], this.state.center[1]];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(SearchBar, {\n      onGetRoute: this.highlighted_route,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Map, {\n      center: position,\n      zoom: this.state.zoom,\n      ref: this.mapRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TileLayer, {\n      attribution: \"\\xA9 <a href=\\\"https://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://{s}.tile.osm.org/{z}/{x}/{y}.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(FeatureGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Polyline, {\n      color: \"grey\",\n      weight: \"6\",\n      positions: this.state.highlighted_route[1],\n      onMouseOver: e => e.target.openPopup(),\n      onMouseOut: e => e.target.closePopup(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Popup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 18\n      }\n    }, \"Elevation: \"), this.state.elevation[1], \" meters\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 18\n      }\n    }, \"Distance: \"), this.state.distance[1], \" meters\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 18\n      }\n    }, \"Distance Percentage: \"), (this.state.distance[1] / this.state.distance[0] * 100).toPrecision(4), \" %\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 18\n      }\n    }, \"Elevation Percentage: \"), (this.state.elevation[1] / this.state.elevation[0] * 100).toPrecision(4), \" %\")))), /*#__PURE__*/React.createElement(Polyline, {\n      color: \"blue\",\n      weight: \"5\",\n      positions: this.state.highlighted_route[0],\n      ref: this.routeRef,\n      onMouseOver: e => e.target.openPopup(),\n      onMouseOut: e => e.target.closePopup(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Popup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 20\n      }\n    }, \"Elevation: \"), this.state.elevation[0], \" meters\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 20\n      }\n    }, \"Distance: \"), this.state.distance[0], \" meters\")))), this.state.markers.map((position, idx) => /*#__PURE__*/React.createElement(CircleMarker, {\n      key: `marker-${idx}`,\n      center: position,\n      color: \"white\",\n      fillOpacity: \"0.8\",\n      fillColor: this.state.marker_color[idx],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Popup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    }, this.state.popups[idx]))))));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(ElenaMap, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/Faith/Downloads/ELeNa/elena-frontend/src/index.js"],"names":["React","ReactDOM","Polyline","Map","TileLayer","FeatureGroup","CircleMarker","Popup","SearchBar","ElenaMap","Component","constructor","highlighted_route","route","mapElement","mapRef","current","leafletElement","routeElement","routeRef","setState","shortestpath","values","selectedpath","elevation","distance","markers","length","fitBounds","getBounds","state","center","zoom","popups","marker_color","createRef","render","position","e","target","openPopup","closePopup","toPrecision","map","idx","document","getElementById"],"mappings":"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","sourcesContent":["\nimport React from \"react\";\nimport ReactDOM from 'react-dom';\nimport { Polyline, Map, TileLayer, FeatureGroup, CircleMarker, Popup} from \"react-leaflet\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport SearchBar from './SearchBar';\nimport 'leaflet/dist/leaflet.css';\n\nclass ElenaMap extends React.Component {\n\n  constructor() {\n    super()\n    this.state = {\n      center: [37.7267455, -122.443671],\n      zoom: 20,\n      highlighted_route: [[],[]],\n      elevation: [[0], [1]],\n      distance: [[0],[1]],\n      markers: [],\n      popups: [\"Origin\", \"Destination\"],\n      marker_color: [\"green\", \"red\"]\n    }\n\n    this.routeRef = React.createRef();\n    this.mapRef = React.createRef();\n  }\n\n  highlighted_route = (route) => {\n    const mapElement = this.mapRef.current.leafletElement;\n    const routeElement = this.routeRef.current.leafletElement;\n    this.setState({\n      highlighted_route: [route.shortestpath.values, route.selectedpath.values],\n      elevation: [route.shortestpath.elevation, route.selectedpath.elevation],\n      distance: [route.shortestpath.distance, route.selectedpath.distance],\n      markers: [route.shortestpath.values[0], route.shortestpath.values[route.shortestpath.values.length - 1]]\n    },\n    ()=>{\n      mapElement.fitBounds(routeElement.getBounds())\n    });\n  }\n\n\n  render() {\n    const position = [this.state.center[0], this.state.center[1]];\n    return (\n      <div>\n      <SearchBar onGetRoute={this.highlighted_route}/>\n      <Map center={position} zoom={this.state.zoom}  ref={this.mapRef}>\n        <TileLayer\n          attribution='&copy; <a href=\"https://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url='https://{s}.tile.osm.org/{z}/{x}/{y}.png'\n        />\n        <FeatureGroup>\n        <Polyline color=\"grey\" weight='6' positions={this.state.highlighted_route[1]}\n          onMouseOver={e => e.target.openPopup()}\n          onMouseOut={e => e.target.closePopup()}>\n          <Popup>\n            <div>\n              <p><b>Elevation: </b>{this.state.elevation[1]} meters</p>\n              <p><b>Distance: </b>{this.state.distance[1]} meters</p>\n              <p><b>Distance Percentage: </b>{(this.state.distance[1] / this.state.distance[0] * 100).toPrecision(4)} %</p>\n              <p><b>Elevation Percentage: </b>{(this.state.elevation[1] / this.state.elevation[0] * 100).toPrecision(4)} %</p>\n            </div>\n          </Popup>\n        </Polyline>\n          <Polyline color=\"blue\" weight='5' positions={this.state.highlighted_route[0]} ref={this.routeRef}\n            onMouseOver={e => e.target.openPopup()}\n            onMouseOut={e => e.target.closePopup()}>\n            <Popup>\n              <div>\n                <p><b>Elevation: </b>{this.state.elevation[0]} meters</p>\n                <p><b>Distance: </b>{this.state.distance[0]} meters</p>\n              </div>\n            </Popup>\n          </Polyline>\n          {this.state.markers.map((position, idx) =>\n            <CircleMarker key={`marker-${idx}`} center={position} color=\"white\" fillOpacity='0.8' fillColor={this.state.marker_color[idx]}>\n              <Popup>{this.state.popups[idx]}</Popup>\n            </CircleMarker>\n          )}\n        </FeatureGroup>\n      </Map>\n      </div>\n    );\n  }\n}\n\n\nReactDOM.render(<ElenaMap />, document.getElementById('root'))\n"]},"metadata":{},"sourceType":"module"}