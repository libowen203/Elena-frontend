{"ast":null,"code":"var _jsxFileName = \"/Users/patrick/Desktop/Theory_and_Practice_of_Software_Engineering/Final_Project/elena-front/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from 'react-dom';\nimport { Polyline, Map, TileLayer, FeatureGroup, CircleMarker, Popup } from \"react-leaflet\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport SearchBar from './SearchBar';\nimport 'leaflet/dist/leaflet.css';\n\nclass ElenaMap extends React.Component {\n  constructor() {\n    super();\n\n    this.highlighted_route = route => {\n      const mapElement = this.mapRef.current.leafletElement;\n      const routeElement = this.routeRef.current.leafletElement;\n      this.setState({\n        highlighted_route: route.values,\n        markers: [route.values[0], route.values[route.values.length - 1]]\n      }, () => {\n        mapElement.fitBounds(routeElement.getBounds());\n      });\n    };\n\n    this.state = {\n      center: [42.361145, -71.057083],\n      zoom: 20,\n      highlighted_route: [],\n      markers: [],\n      popups: [\"Origin\", \"Destination\"],\n      marker_color: [\"green\", \"red\"]\n    };\n    this.routeRef = React.createRef();\n    this.mapRef = React.createRef();\n  }\n\n  render() {\n    const position = [this.state.center[0], this.state.center[1]];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(SearchBar, {\n      onGetRoute: this.highlighted_route,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Map, {\n      center: position,\n      zoom: this.state.zoom,\n      ref: this.mapRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TileLayer, {\n      attribution: \"\\xA9 <a href=\\\"https://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://{s}.tile.osm.org/{z}/{x}/{y}.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(FeatureGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Polyline, {\n      color: \"blue\",\n      weight: \"5\",\n      positions: this.state.highlighted_route,\n      ref: this.routeRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }), this.state.markers.map((position, idx) => /*#__PURE__*/React.createElement(CircleMarker, {\n      key: `marker-${idx}`,\n      center: position,\n      color: \"white\",\n      fillOpacity: \"0.8\",\n      fillColor: this.state.marker_color[idx],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Popup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, this.state.popups[idx]))))));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(ElenaMap, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/patrick/Desktop/Theory_and_Practice_of_Software_Engineering/Final_Project/elena-front/src/index.js"],"names":["React","ReactDOM","Polyline","Map","TileLayer","FeatureGroup","CircleMarker","Popup","SearchBar","ElenaMap","Component","constructor","highlighted_route","route","mapElement","mapRef","current","leafletElement","routeElement","routeRef","setState","values","markers","length","fitBounds","getBounds","state","center","zoom","popups","marker_color","createRef","render","position","map","idx","document","getElementById"],"mappings":"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","sourcesContent":["\nimport React from \"react\";\nimport ReactDOM from 'react-dom';\nimport { Polyline, Map, TileLayer, FeatureGroup, CircleMarker, Popup} from \"react-leaflet\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport SearchBar from './SearchBar';\nimport 'leaflet/dist/leaflet.css';\n\nclass ElenaMap extends React.Component {\n\n  constructor() {\n    super()\n    this.state = {\n      center: [42.361145, -71.057083],\n      zoom: 20,\n      highlighted_route: [],\n      markers: [],\n      popups: [\"Origin\", \"Destination\"],\n      marker_color: [\"green\", \"red\"]\n    }\n\n\n    this.routeRef = React.createRef();\n    this.mapRef = React.createRef();\n  }\n\n  highlighted_route = (route) => {\n    const mapElement = this.mapRef.current.leafletElement;\n    const routeElement = this.routeRef.current.leafletElement;\n    this.setState({\n      highlighted_route:route.values,\n      markers: [route.values[0], route.values[route.values.length - 1]]\n    },\n    ()=>{\n      mapElement.fitBounds(routeElement.getBounds())\n    });\n  }\n\n  render() {\n    const position = [this.state.center[0], this.state.center[1]];\n\n    return (\n      <div>\n      <SearchBar onGetRoute={this.highlighted_route}/>\n      <Map center={position} zoom={this.state.zoom}  ref={this.mapRef}>\n        <TileLayer\n          attribution='&copy; <a href=\"https://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url='https://{s}.tile.osm.org/{z}/{x}/{y}.png'\n        />\n        <FeatureGroup>\n          <Polyline color=\"blue\" weight='5' positions={this.state.highlighted_route} ref={this.routeRef}/>\n          {this.state.markers.map((position, idx) =>\n            <CircleMarker key={`marker-${idx}`} center={position} color=\"white\" fillOpacity='0.8' fillColor={this.state.marker_color[idx]}>\n            <Popup>{this.state.popups[idx]}</Popup>\n            </CircleMarker>\n          )}\n        </FeatureGroup>\n      </Map>\n      </div>\n    );\n  }\n}\n\n\nReactDOM.render(<ElenaMap />, document.getElementById('root'))\n"]},"metadata":{},"sourceType":"module"}