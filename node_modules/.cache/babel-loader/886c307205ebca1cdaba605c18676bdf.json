{"ast":null,"code":"var _jsxFileName = \"/Users/patrick/Desktop/Theory_and_Practice_of_Software_Engineering/Final_Project/elena-front/src/SearchBar.js\";\nimport React from \"react\";\nimport { Button } from 'react-bootstrap';\nimport AlgorithmMenu from './AlgorithmMenu';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles } from '@material-ui/core/styles';\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.submitHandler = event => {\n      event.preventDefault();\n      const uri = new URL(\"http://localhost:8080/search\");\n      uri.searchParams.append(\"from\", this.state.from);\n      uri.searchParams.append(\"to\", this.state.to);\n      uri.searchParams.append(\"algorithm\", this.state.algorithm);\n      uri.searchParams.append(\"elemode\", this.state.elevationMode);\n      uri.searchParams.append(\"percentage\", this.state.percentage);\n      fetch(uri.href).then(response => {\n        return response.json();\n      }).then(data => this.props.onGetRoute(data)).catch(error => alert(\"something went wrong\"));\n    };\n\n    this.requestForOptions = (name, type) => {\n      const uri = new URL(\"http://localhost:8080/autocomplete\");\n      uri.searchParams.append(\"name\", name);\n      fetch(uri.href).then(response => {\n        return response.json();\n      }).then(data => {\n        if (type === \"from\") {\n          this.setState({\n            fromLocationNames: data.values\n          });\n        } else {\n          this.setState({\n            toLocationNames: data.values\n          });\n        }\n      });\n    };\n\n    this.changeHandler = (event, event_value) => {\n      const name = event.target.id.split(\"-\")[0];\n      const value = event_value ? event_value : event.target.value;\n      this.setState({\n        [name]: value\n      }, () => {\n        if (name === \"from\" && this.state.from.length === 2) {\n          this.requestForOptions(this.state.from, \"from\");\n        } else if (name === \"from\" && this.state.from.length === 0) {\n          this.setState({\n            fromLocationNames: []\n          });\n        } else if (name === \"to\" && this.state.to.length === 2) {\n          this.requestForOptions(this.state.to, \"to\");\n        } else if (name === \"to\" && this.state.to.length === 0) {\n          this.setState({\n            toLocationNames: []\n          });\n        }\n      });\n    };\n\n    this.algoMenuSelectHandler = selection => {\n      this.setState({\n        [selection.key]: selection.value\n      });\n    };\n\n    this.useStyles = makeStyles(theme => ({\n      root: {\n        '& .MuiTextField-root': {\n          margin: theme.spacing(1),\n          width: 200\n        }\n      }\n    }));\n    this.state = {\n      from: \"\",\n      to: \"\",\n      percentage: \"150\",\n      algorithm: \"DIJKSTRA_YEN\",\n      elevationMode: \"MIN\",\n      fromLocationNames: [],\n      toLocationNames: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      className: this.useStyles.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"search_form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Autocomplete, {\n      freeSolo: true,\n      options: this.state.fromLocationNames.map(option => option.name),\n      id: \"from\",\n      onChange: this.changeHandler,\n      renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n        label: \"Origin\",\n        margin: \"normal\",\n        variant: \"filled\",\n        onChange: this.changeHandler,\n        InputProps: { ...params.InputProps,\n          type: 'from_search'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 16\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Autocomplete, {\n      freeSolo: true,\n      options: this.state.toLocationNames.map(option => option.name),\n      id: \"to\",\n      onChange: this.changeHandler,\n      renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n        label: \"Destination\",\n        margin: \"normal\",\n        variant: \"filled\",\n        onChange: this.changeHandler,\n        InputProps: { ...params.InputProps,\n          type: 'to_search'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      label: \"Shortest Path%\",\n      margin: \"normal\",\n      variant: \"filled\",\n      onChange: this.changeHandler,\n      id: \"percentage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(AlgorithmMenu, {\n      onSelect: this.algoMenuSelectHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pad_top\",\n      id: \"submit_button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outline-secondary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    }, \"Search\"))));\n  }\n\n}\n\nexport default SearchBar;","map":{"version":3,"sources":["/Users/patrick/Desktop/Theory_and_Practice_of_Software_Engineering/Final_Project/elena-front/src/SearchBar.js"],"names":["React","Button","AlgorithmMenu","TextField","Autocomplete","makeStyles","SearchBar","Component","constructor","props","submitHandler","event","preventDefault","uri","URL","searchParams","append","state","from","to","algorithm","elevationMode","percentage","fetch","href","then","response","json","data","onGetRoute","catch","error","alert","requestForOptions","name","type","setState","fromLocationNames","values","toLocationNames","changeHandler","event_value","target","id","split","value","length","algoMenuSelectHandler","selection","key","useStyles","theme","root","margin","spacing","width","render","map","option","params","InputProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,SAASC,UAAT,QAA2B,0BAA3B;;AAGA,MAAMC,SAAN,SAAwBN,KAAK,CAACO,SAA9B,CAAuC;AAErCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAwBlBC,aAxBkB,GAwBDC,KAAD,IAAU;AACxBA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAMC,GAAG,GAAG,IAAIC,GAAJ,CAAQ,8BAAR,CAAZ;AACAD,MAAAA,GAAG,CAACE,YAAJ,CAAiBC,MAAjB,CAAwB,MAAxB,EAAgC,KAAKC,KAAL,CAAWC,IAA3C;AACAL,MAAAA,GAAG,CAACE,YAAJ,CAAiBC,MAAjB,CAAwB,IAAxB,EAA8B,KAAKC,KAAL,CAAWE,EAAzC;AACAN,MAAAA,GAAG,CAACE,YAAJ,CAAiBC,MAAjB,CAAwB,WAAxB,EAAqC,KAAKC,KAAL,CAAWG,SAAhD;AACAP,MAAAA,GAAG,CAACE,YAAJ,CAAiBC,MAAjB,CAAwB,SAAxB,EAAmC,KAAKC,KAAL,CAAWI,aAA9C;AACAR,MAAAA,GAAG,CAACE,YAAJ,CAAiBC,MAAjB,CAAwB,YAAxB,EAAsC,KAAKC,KAAL,CAAWK,UAAjD;AAGAC,MAAAA,KAAK,CAACV,GAAG,CAACW,IAAL,CAAL,CACGC,IADH,CACQC,QAAQ,IAAK;AAAC,eAAOA,QAAQ,CAACC,IAAT,EAAP;AAAuB,OAD7C,EAEGF,IAFH,CAEQG,IAAI,IAAI,KAAKnB,KAAL,CAAWoB,UAAX,CAAsBD,IAAtB,CAFhB,EAGGE,KAHH,CAGSC,KAAK,IAAIC,KAAK,CAAC,sBAAD,CAHvB;AAID,KAtCiB;;AAAA,SAwCjBC,iBAxCiB,GAwCG,CAACC,IAAD,EAAOC,IAAP,KAAgB;AACnC,YAAMtB,GAAG,GAAG,IAAIC,GAAJ,CAAQ,oCAAR,CAAZ;AACAD,MAAAA,GAAG,CAACE,YAAJ,CAAiBC,MAAjB,CAAwB,MAAxB,EAAgCkB,IAAhC;AAEAX,MAAAA,KAAK,CAACV,GAAG,CAACW,IAAL,CAAL,CACGC,IADH,CACQC,QAAQ,IAAI;AAAE,eAAOA,QAAQ,CAACC,IAAT,EAAP;AAAuB,OAD7C,EAEGF,IAFH,CAEQG,IAAI,IAAG;AACX,YAAGO,IAAI,KAAK,MAAZ,EAAmB;AACjB,eAAKC,QAAL,CAAc;AAACC,YAAAA,iBAAiB,EAAET,IAAI,CAACU;AAAzB,WAAd;AACD,SAFD,MAGI;AACF,eAAKF,QAAL,CAAc;AAACG,YAAAA,eAAe,EAAEX,IAAI,CAACU;AAAvB,WAAd;AACD;AACF,OATH;AAUD,KAtDiB;;AAAA,SAwDlBE,aAxDkB,GAwDF,CAAC7B,KAAD,EAAQ8B,WAAR,KAAuB;AACrC,YAAMP,IAAI,GAAGvB,KAAK,CAAC+B,MAAN,CAAaC,EAAb,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAAb;AACA,YAAMC,KAAK,GAAGJ,WAAW,GAAGA,WAAH,GAAiB9B,KAAK,CAAC+B,MAAN,CAAaG,KAAvD;AAEA,WAAKT,QAAL,CAAc;AACZ,SAACF,IAAD,GAAQW;AADI,OAAd,EAEG,MAAM;AACP,YAAGX,IAAI,KAAK,MAAT,IAAmB,KAAKjB,KAAL,CAAWC,IAAX,CAAgB4B,MAAhB,KAA2B,CAAjD,EAAmD;AAC/C,eAAKb,iBAAL,CAAuB,KAAKhB,KAAL,CAAWC,IAAlC,EAAwC,MAAxC;AACD,SAFH,MAGK,IAAIgB,IAAI,KAAK,MAAT,IAAmB,KAAKjB,KAAL,CAAWC,IAAX,CAAgB4B,MAAhB,KAA2B,CAAlD,EAAqD;AACxD,eAAKV,QAAL,CAAc;AAACC,YAAAA,iBAAiB,EAAC;AAAnB,WAAd;AACD,SAFI,MAGA,IAAIH,IAAI,KAAK,IAAT,IAAiB,KAAKjB,KAAL,CAAWE,EAAX,CAAc2B,MAAd,KAAyB,CAA9C,EAAiD;AACpD,eAAKb,iBAAL,CAAuB,KAAKhB,KAAL,CAAWE,EAAlC,EAAsC,IAAtC;AACD,SAFI,MAGA,IAAIe,IAAI,KAAK,IAAT,IAAiB,KAAKjB,KAAL,CAAWE,EAAX,CAAc2B,MAAd,KAAyB,CAA9C,EAAiD;AACpD,eAAKV,QAAL,CAAc;AAACG,YAAAA,eAAe,EAAC;AAAjB,WAAd;AACD;AACA,OAfH;AAiBD,KA7EiB;;AAAA,SAgFlBQ,qBAhFkB,GAgFOC,SAAD,IAAc;AACpC,WAAKZ,QAAL,CAAc;AAAC,SAACY,SAAS,CAACC,GAAX,GAAgBD,SAAS,CAACH;AAA3B,OAAd;AACD,KAlFiB;;AAIhB,SAAKK,SAAL,GAAiB7C,UAAU,CAAE8C,KAAD,KAAY;AACtCC,MAAAA,IAAI,EAAE;AACJ,gCAAwB;AACtBC,UAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADc;AAEtBC,UAAAA,KAAK,EAAE;AAFe;AADpB;AADgC,KAAZ,CAAD,CAA3B;AASA,SAAKtC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAG,EADI;AAEXC,MAAAA,EAAE,EAAG,EAFM;AAGXG,MAAAA,UAAU,EAAE,KAHD;AAIXF,MAAAA,SAAS,EAAE,cAJA;AAKXC,MAAAA,aAAa,EAAE,KALJ;AAMXgB,MAAAA,iBAAiB,EAAE,EANR;AAOXE,MAAAA,eAAe,EAAE;AAPN,KAAb;AASD;;AA8DDiB,EAAAA,MAAM,GAAE;AACN,wBAEE;AAAM,MAAA,QAAQ,EAAE,KAAK9C,aAArB;AAAoC,MAAA,SAAS,EAAE,KAAKwC,SAAL,CAAeE,IAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,EAAE,EAAC,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AACG,MAAA,QAAQ,MADX;AAEG,MAAA,OAAO,EAAE,KAAKnC,KAAL,CAAWoB,iBAAX,CAA6BoB,GAA7B,CAAkCC,MAAD,IAAYA,MAAM,CAACxB,IAApD,CAFZ;AAGG,MAAA,EAAE,EAAC,MAHN;AAIG,MAAA,QAAQ,EAAE,KAAKM,aAJlB;AAKG,MAAA,WAAW,EAAGmB,MAAD,iBACX,oBAAC,SAAD,oBACMA,MADN;AAEE,QAAA,KAAK,EAAC,QAFR;AAGE,QAAA,MAAM,EAAC,QAHT;AAIE,QAAA,OAAO,EAAC,QAJV;AAKE,QAAA,QAAQ,EAAE,KAAKnB,aALjB;AAME,QAAA,UAAU,EAAE,EAAE,GAAGmB,MAAM,CAACC,UAAZ;AAAwBzB,UAAAA,IAAI,EAAE;AAA9B,SANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAiBI,oBAAC,YAAD;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,OAAO,EAAE,KAAKlB,KAAL,CAAWsB,eAAX,CAA2BkB,GAA3B,CAAgCC,MAAD,IAAUA,MAAM,CAACxB,IAAhD,CAFX;AAGE,MAAA,EAAE,EAAC,IAHL;AAIE,MAAA,QAAQ,EAAE,KAAKM,aAJjB;AAKE,MAAA,WAAW,EAAGmB,MAAD,iBACX,oBAAC,SAAD,oBACMA,MADN;AAEE,QAAA,KAAK,EAAC,aAFR;AAGE,QAAA,MAAM,EAAC,QAHT;AAIE,QAAA,OAAO,EAAC,QAJV;AAKE,QAAA,QAAQ,EAAE,KAAKnB,aALjB;AAME,QAAA,UAAU,EAAE,EAAE,GAAGmB,MAAM,CAACC,UAAZ;AAAwBzB,UAAAA,IAAI,EAAE;AAA9B,SANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBJ,eAiCI,oBAAC,SAAD;AACE,MAAA,KAAK,EAAC,gBADR;AAEE,MAAA,MAAM,EAAC,QAFT;AAGE,MAAA,OAAO,EAAC,QAHV;AAIE,MAAA,QAAQ,EAAE,KAAKK,aAJjB;AAKE,MAAA,EAAE,EAAC,YALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjCJ,eAwCI,oBAAC,aAAD;AAAe,MAAA,QAAQ,EAAE,KAAKO,qBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxCJ,eAyCI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAyB,MAAA,EAAE,EAAC,eAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,mBAAhB;AAAoC,MAAA,IAAI,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAzCJ,CADF,CAFF;AAmDD;;AA1IoC;;AA6IvC,eAAezC,SAAf","sourcesContent":["import React from \"react\";\nimport { Button } from 'react-bootstrap'\nimport AlgorithmMenu from './AlgorithmMenu'\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nclass SearchBar extends React.Component{\n\n  constructor(props){\n    super(props);\n\n\n    this.useStyles = makeStyles((theme) => ({\n      root: {\n        '& .MuiTextField-root': {\n          margin: theme.spacing(1),\n          width: 200,\n        },\n      },\n    }));\n\n    this.state = {\n      from : \"\",\n      to : \"\",\n      percentage: \"150\",\n      algorithm: \"DIJKSTRA_YEN\",\n      elevationMode: \"MIN\",\n      fromLocationNames: [],\n      toLocationNames: []\n    }\n  }\n\n  submitHandler = (event) =>{\n    event.preventDefault();\n    const uri = new URL(\"http://localhost:8080/search\");\n    uri.searchParams.append(\"from\", this.state.from);\n    uri.searchParams.append(\"to\", this.state.to);\n    uri.searchParams.append(\"algorithm\", this.state.algorithm);\n    uri.searchParams.append(\"elemode\", this.state.elevationMode);\n    uri.searchParams.append(\"percentage\", this.state.percentage);\n\n\n    fetch(uri.href)\n      .then(response =>  {return response.json()})\n      .then(data => this.props.onGetRoute(data))\n      .catch(error => alert(\"something went wrong\"))\n  }\n\n   requestForOptions = (name, type) => {\n    const uri = new URL(\"http://localhost:8080/autocomplete\");\n    uri.searchParams.append(\"name\", name);\n\n    fetch(uri.href)\n      .then(response => { return response.json()} )\n      .then(data =>{\n        if(type === \"from\"){\n          this.setState({fromLocationNames: data.values})\n        }\n        else{\n          this.setState({toLocationNames: data.values})\n        }\n      })\n  }\n\n  changeHandler = (event, event_value) =>{\n    const name = event.target.id.split(\"-\")[0]\n    const value = event_value?  event_value : event.target.value\n\n    this.setState({\n      [name]: value,\n    }, () => {\n      if(name === \"from\" && this.state.from.length === 2){\n          this.requestForOptions(this.state.from, \"from\")\n        }\n      else if (name === \"from\" && this.state.from.length === 0) {\n        this.setState({fromLocationNames:[]})\n      }\n      else if((name === \"to\" && this.state.to.length === 2)){\n        this.requestForOptions(this.state.to, \"to\")\n      }\n      else if((name === \"to\" && this.state.to.length === 0)){\n        this.setState({toLocationNames:[]})\n      }\n      });\n\n  }\n\n\n  algoMenuSelectHandler = (selection) =>{\n    this.setState({[selection.key]:selection.value})\n  }\n\n  render(){\n    return (\n\n      <form onSubmit={this.submitHandler} className={this.useStyles.root} >\n        <div id=\"search_form\">\n          <Autocomplete\n             freeSolo\n             options={this.state.fromLocationNames.map((option) => option.name)}\n             id=\"from\"\n             onChange={this.changeHandler}\n             renderInput={(params) => (\n               <TextField\n                 {...params}\n                 label=\"Origin\"\n                 margin=\"normal\"\n                 variant=\"filled\"\n                 onChange={this.changeHandler}\n                 InputProps={{ ...params.InputProps, type: 'from_search' }}\n               />\n             )}\n           />\n            <Autocomplete\n              freeSolo\n              options={this.state.toLocationNames.map((option)=>option.name)}\n              id=\"to\"\n              onChange={this.changeHandler}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Destination\"\n                  margin=\"normal\"\n                  variant=\"filled\"\n                  onChange={this.changeHandler}\n                  InputProps={{ ...params.InputProps, type: 'to_search'}}\n                />\n              )}\n            />\n            <TextField\n              label=\"Shortest Path%\"\n              margin=\"normal\"\n              variant=\"filled\"\n              onChange={this.changeHandler}\n              id=\"percentage\"\n            />\n            <AlgorithmMenu onSelect={this.algoMenuSelectHandler}/>\n            <div className=\"pad_top\" id=\"submit_button\">\n              <Button variant=\"outline-secondary\" type=\"submit\">Search</Button>\n            </div>\n        </div>\n\n      </form>\n    );\n  }\n}\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}