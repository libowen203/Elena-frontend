{"ast":null,"code":"var _jsxFileName = \"/Users/patrick/Desktop/Theory_and_Practice_of_Software_Engineering/Final_Project/elena-front/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from 'react-dom';\nimport { Polyline, Map, TileLayer, FeatureGroup, Marker, Popup } from \"react-leaflet\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport SearchBar from './SearchBar';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport icon from 'leaflet/dist/images/marker-icon.png';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\n\nclass ElenaMap extends React.Component {\n  constructor() {\n    super();\n\n    this.highlighted_route = route => {\n      const mapElement = this.mapRef.current.leafletElement;\n      const routeElement = this.routeRef.current.leafletElement;\n      this.setState({\n        highlighted_route: route.values,\n        markers: [route.values[0], route.values[route.values.length - 1]]\n      }, () => {\n        mapElement.fitBounds(routeElement.getBounds());\n      });\n    };\n\n    this.state = {\n      center: [42.361145, -71.057083],\n      zoom: 20,\n      highlighted_route: [],\n      markers: []\n    };\n    let DefaultIcon = L.icon({\n      iconUrl: icon,\n      shadowUrl: iconShadow\n    });\n    L.Marker.prototype.options.icon = DefaultIcon;\n    this.routeRef = React.createRef();\n    this.mapRef = React.createRef();\n  }\n\n  render() {\n    const position = [this.state.center[0], this.state.center[1]];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(SearchBar, {\n      onGetRoute: this.highlighted_route,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Map, {\n      center: position,\n      zoom: this.state.zoom,\n      ref: this.mapRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TileLayer, {\n      attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://{s}.tile.osm.org/{z}/{x}/{y}.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(FeatureGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Polyline, {\n      color: \"blue\",\n      weight: \"5\",\n      positions: this.state.highlighted_route,\n      ref: this.routeRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(ElenaMap, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/patrick/Desktop/Theory_and_Practice_of_Software_Engineering/Final_Project/elena-front/src/index.js"],"names":["React","ReactDOM","Polyline","Map","TileLayer","FeatureGroup","Marker","Popup","SearchBar","L","icon","iconShadow","ElenaMap","Component","constructor","highlighted_route","route","mapElement","mapRef","current","leafletElement","routeElement","routeRef","setState","values","markers","length","fitBounds","getBounds","state","center","zoom","DefaultIcon","iconUrl","shadowUrl","prototype","options","createRef","render","position","document","getElementById"],"mappings":"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","sourcesContent":["\nimport React from \"react\";\nimport ReactDOM from 'react-dom';\nimport { Polyline, Map, TileLayer, FeatureGroup, Marker, Popup} from \"react-leaflet\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport SearchBar from './SearchBar';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport icon from 'leaflet/dist/images/marker-icon.png';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\n\nclass ElenaMap extends React.Component {\n\n  constructor() {\n    super()\n    this.state = {\n      center: [42.361145, -71.057083],\n      zoom: 20,\n      highlighted_route: [],\n      markers: []\n    }\n\n    let DefaultIcon = L.icon({\n    iconUrl: icon,\n    shadowUrl: iconShadow\n    });\n\n    L.Marker.prototype.options.icon = DefaultIcon;\n\n    this.routeRef = React.createRef();\n    this.mapRef = React.createRef();\n  }\n\n  highlighted_route = (route) => {\n    const mapElement = this.mapRef.current.leafletElement;\n    const routeElement = this.routeRef.current.leafletElement;\n    this.setState({\n      highlighted_route:route.values,\n      markers: [route.values[0], route.values[route.values.length - 1]]\n    },\n    ()=>{\n      mapElement.fitBounds(routeElement.getBounds())\n    });\n  }\n\n  render() {\n    const position = [this.state.center[0], this.state.center[1]];\n\n    return (\n      <div>\n      <SearchBar onGetRoute={this.highlighted_route}/>\n      <Map center={position} zoom={this.state.zoom}  ref={this.mapRef}>\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url='https://{s}.tile.osm.org/{z}/{x}/{y}.png'\n        />\n        <FeatureGroup>\n          <Polyline color=\"blue\" weight='5' positions={this.state.highlighted_route} ref={this.routeRef}/>\n        </FeatureGroup>\n      </Map>\n      </div>\n    );\n  }\n}\n\n\nReactDOM.render(<ElenaMap />, document.getElementById('root'))\n"]},"metadata":{},"sourceType":"module"}